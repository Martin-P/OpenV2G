/*
 * Copyright (C) 2007-2013 Siemens AG
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*******************************************************************
 *
 * @author Daniel.Peintner.EXT@siemens.com
 * @version 0.8 
 * @contact Joerg.Heuer@siemens.com
 *
 * <p>Code generated by EXIdizer.com</p>
 * <p>Schema: input/test_v2g/V2G_CI_MsgDef.xsd</p>
 *
 *
 ********************************************************************/



#ifdef __cplusplus
extern "C" {
#endif

#include "EXIConfig.h"
#include "EXITypes.h"

#if MEMORY_ALLOCATION == DYNAMIC_ALLOCATION

/**
 * \file 	DynamicMemory.h
 * \brief 	Utilities to allocate and free EXI datatypes memory
 *
 */

#ifndef DYNAMIC_MEMORY_H
#define DYNAMIC_MEMORY_H

/**
 * \brief 		Allocates memory for at least the length of the string
 *
 * \param       s				UCS String to allocate memory for
 * \param       length			Length
 * \return                  	Error-Code <> 0
 *
 */
int exiAllocateDynamicStringMemory(exi_string_ucs_t* s, uint16_t length);


/**
 * \brief 		Allocates memory for at least the length of the string
 *
 * \param       b				Binary to allocate memory for
 * \param      	length			Length
 * \return                  	Error-Code <> 0
 *
 */
int exiAllocateDynamicBinaryMemory(exi_bytes_t* b, uint16_t length);


/**
 * \brief 		Free String Memory (if any)
 *
 * \param       s				UCS String
 * \return                  	Error-Code <> 0
 *
 */
int exiFreeDynamicStringMemory(exi_string_ucs_t* s);


/**
 * \brief 		Free Binary Memory (if any)
 *
 * \param       s				UCS String
 * \return                  	Error-Code <> 0
 *
 */
int exiFreeDynamicBinaryMemory(exi_bytes_t* b);



#endif

#endif /* DYNAMIC_ALLOCATION */


#ifdef __cplusplus
}
#endif
