/*
 * Copyright (C) 2007-2013 Siemens AG
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*******************************************************************
 *
 * @author Daniel.Peintner.EXT@siemens.com
 * @version 0.8 
 * @contact Joerg.Heuer@siemens.com
 *
 * <p>Code generated by EXIdizer.com</p>
 * <p>Schema: input/test_v2g/V2G_CI_MsgDef.xsd</p>
 *
 *
 ********************************************************************/



#ifdef __cplusplus
extern "C" {
#endif

/**
 * \file 	StringNameTable.h
 * \brief 	String table count implementation
 *
 */

#ifndef STRING_NAME_TABLE_H
#define STRING_NAME_TABLE_H

#include "EXITypes.h"


/**
 * \brief  		Init name table
 *
 * 				Inits counter et cetera
 *
 * \param       runtimeTable	Runtime Table
 * \return                  	Error-Code <> 0
 *
 */
int exiInitNameTableRuntime(exi_name_table_runtime_t* runtimeTable);


/**
 * \brief  		Get Uri Size
 *
 * \param       prepopulatedTable	Pre-Populated Table
 * \param       runtimeTable		Runtime Table
 * \param       uriLength			Uri Size (out)
 * \return                  		Error-Code <> 0
 *
 */
int exiGetUriSize(exi_name_table_prepopulated_t* prepopulatedTable,
		exi_name_table_runtime_t* runtimeTable, uint16_t* uriLength);


/**
 * \brief  		Get LocalName Size
 *
 * \param       prepopulatedTable	Pre-Populated Table
 * \param       runtimeTable		Runtime Table
 * \param       uriID				Uri ID for local-name
 * \param       localNameLength		Local-Name Size (out)
 * \return                  		Error-Code <> 0
 *
 */
int exiGetLocalNameSize(exi_name_table_prepopulated_t* prepopulatedTable,
		exi_name_table_runtime_t* runtimeTable, uint16_t uriID,
		uint16_t* localNameLength);


/**
 * \brief  		Add runtime URI entry
 *
 * \param       prepopulatedTable	Pre-Populated Table
 * \param       runtimeTable		Runtime Table
 * \return                  		Error-Code <> 0
 *
 */
int exiAddUri(exi_name_table_prepopulated_t* prepopulatedTable,
		exi_name_table_runtime_t* runtimeTable);


/**
 * \brief  		Add runtime local-name entry
 *
 * \param       prepopulatedTable	Pre-Populated Table
 * \param       runtimeTable		Runtime Table
 * \param       uriID				Uri ID for local-name
 * \param       localNameID			LocalName ID (out)
 * \return                  		Error-Code <> 0
 *
 */
int exiAddLocalName(exi_name_table_prepopulated_t* prepopulatedTable,
		exi_name_table_runtime_t* runtimeTable, uint16_t uriID, uint16_t* localNameID);

#endif

#ifdef __cplusplus
}
#endif

