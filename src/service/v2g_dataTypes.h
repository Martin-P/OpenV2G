/*
 * Copyright (C) 2007-2013 Siemens AG
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*******************************************************************
 *
 * @author Sebastian.Kaebisch@siemens.com
 * @version 0.8
 * @contact Joerg.Heuer@siemens.com
 *
 * <p>Code generated by EXISeGen</p>
 *
 ********************************************************************/



#ifdef __cplusplus
extern "C" {
#endif

#ifndef SERVICEDATATYPES_H
#define SERVICEDATATYPES_H

#include "EXITypes.h"
#include "string.h"


	

enum faultCodeType
{
	ParsingError_faultCodeType=0, 
	NoTLSRootCertificatAvailable_faultCodeType=1, 
	UnknownError_faultCodeType=2

}; 

enum responseCodeType
{
	OK_responseCodeType=0, 
	OK_NewSessionEstablished_responseCodeType=1, 
	OK_OldSessionJoined_responseCodeType=2, 
	OK_CertificateExpiresSoon_responseCodeType=3, 
	FAILED_responseCodeType=4, 
	FAILED_SequenceError_responseCodeType=5, 
	FAILED_ServiceIDInvalid_responseCodeType=6, 
	FAILED_UnknownSession_responseCodeType=7, 
	FAILED_ServiceSelectionInvalid_responseCodeType=8, 
	FAILED_PaymentSelectionInvalid_responseCodeType=9, 
	FAILED_CertificateExpired_responseCodeType=10, 
	FAILED_SignatureError_responseCodeType=11, 
	FAILED_NoCertificateAvailable_responseCodeType=12, 
	FAILED_CertChainError_responseCodeType=13, 
	FAILED_ChallengeInvalid_responseCodeType=14, 
	FAILED_ContractCanceled_responseCodeType=15, 
	FAILED_WrongChargeParameter_responseCodeType=16, 
	FAILED_PowerDeliveryNotApplied_responseCodeType=17, 
	FAILED_TariffSelectionInvalid_responseCodeType=18, 
	FAILED_ChargingProfileInvalid_responseCodeType=19, 
	FAILED_MeteringSignatureNotValid_responseCodeType=20, 
	FAILED_NoChargeServiceSelected_responseCodeType=21, 
	FAILED_WrongEnergyTransferMode_responseCodeType=22, 
	FAILED_ContactorError_responseCodeType=23, 
	FAILED_CertificateNotAllowedAtThisEVSE_responseCodeType=24, 
	FAILED_CertificateRevoked_responseCodeType=25

}; 

enum serviceCategoryType
{
	EVCharging_serviceCategoryType=0, 
	Internet_serviceCategoryType=1, 
	ContractCertificate_serviceCategoryType=2, 
	OtherCustom_serviceCategoryType=3

}; 

enum paymentOptionType
{
	Contract_paymentOptionType=0, 
	ExternalPayment_paymentOptionType=1

}; 

enum EnergyTransferModeType
{
	AC_single_phase_core_EnergyTransferModeType=0, 
	AC_three_phase_core_EnergyTransferModeType=1, 
	DC_core_EnergyTransferModeType=2, 
	DC_extended_EnergyTransferModeType=3, 
	DC_combo_core_EnergyTransferModeType=4, 
	DC_unique_EnergyTransferModeType=5

}; 

enum unitSymbolType
{
	h_unitSymbolType=0, 
	m_unitSymbolType=1, 
	s_unitSymbolType=2, 
	A_unitSymbolType=3, 
	V_unitSymbolType=4, 
	W_unitSymbolType=5, 
	Wh_unitSymbolType=6

}; 

enum EVSEProcessingType
{
	Finished_EVSEProcessingType=0, 
	Ongoing_EVSEProcessingType=1, 
	Ongoing_WaitingForCustomerInteraction_EVSEProcessingType=2

}; 

enum DC_EVErrorCodeType
{
	NO_ERROR_DC_EVErrorCodeType=0, 
	FAILED_RESSTemperatureInhibit_DC_EVErrorCodeType=1, 
	FAILED_EVShiftPosition_DC_EVErrorCodeType=2, 
	FAILED_ChargerConnectorLockFault_DC_EVErrorCodeType=3, 
	FAILED_EVRESSMalfunction_DC_EVErrorCodeType=4, 
	FAILED_ChargingCurrentdifferential_DC_EVErrorCodeType=5, 
	FAILED_ChargingVoltageOutOfRange_DC_EVErrorCodeType=6, 
	Reserved_A_DC_EVErrorCodeType=7, 
	Reserved_B_DC_EVErrorCodeType=8, 
	Reserved_C_DC_EVErrorCodeType=9, 
	FAILED_ChargingSystemIncompatibility_DC_EVErrorCodeType=10, 
	NoData_DC_EVErrorCodeType=11

}; 

enum costKindType
{
	relativePricePercentage_costKindType=0, 
	RenewableGenerationPercentage_costKindType=1, 
	CarbonDioxideEmission_costKindType=2

}; 

enum EVSENotificationType
{
	None_EVSENotificationType=0, 
	StopCharging_EVSENotificationType=1, 
	ReNegotiation_EVSENotificationType=2

}; 

enum isolationLevelType
{
	Invalid_isolationLevelType=0, 
	Valid_isolationLevelType=1, 
	Warning_isolationLevelType=2, 
	Fault_isolationLevelType=3, 
	No_IMD_isolationLevelType=4

}; 

enum DC_EVSEStatusCodeType
{
	EVSE_NotReady_DC_EVSEStatusCodeType=0, 
	EVSE_Ready_DC_EVSEStatusCodeType=1, 
	EVSE_Shutdown_DC_EVSEStatusCodeType=2, 
	EVSE_UtilityInterruptEvent_DC_EVSEStatusCodeType=3, 
	EVSE_IsolationMonitoringActive_DC_EVSEStatusCodeType=4, 
	EVSE_EmergencyShutdown_DC_EVSEStatusCodeType=5, 
	EVSE_Malfunction_DC_EVSEStatusCodeType=6, 
	Reserved_8_DC_EVSEStatusCodeType=7, 
	Reserved_9_DC_EVSEStatusCodeType=8, 
	Reserved_A_DC_EVSEStatusCodeType=9, 
	Reserved_B_DC_EVSEStatusCodeType=10, 
	Reserved_C_DC_EVSEStatusCodeType=11

}; 

enum chargeProgressType
{
	Start_chargeProgressType=0, 
	Stop_chargeProgressType=1, 
	Renegotiate_chargeProgressType=2

}; 

enum chargingSessionType
{
	Terminate_chargingSessionType=0, 
	Pause_chargingSessionType=1

}; 




struct arraylen_sessionIDType
{
	size_t data;


};

struct sessionIDType
{
	uint8_t data[8];
	struct arraylen_sessionIDType arraylen;

};

struct arraylen_faultMsgType
{
	size_t data;


};

struct faultMsgType
{
	uint32_t data[64];
	struct arraylen_faultMsgType arraylen;

};

struct selection_NotificationType
{
	unsigned int FaultMsg:1;


};

struct NotificationType
{
	enum faultCodeType FaultCode;
	struct faultMsgType FaultMsg;
	struct selection_NotificationType isused;

};

struct selection_MessageHeaderType
{
	unsigned int Notification:1;
	unsigned int Signature:1;


};

struct arraylen_service_string
{
	size_t data;


};

struct service_string
{
	uint32_t data[16];
	struct arraylen_service_string arraylen;

};

struct selection_SignatureType
{
	unsigned int attr_Id:1;


};

struct selection_SignedInfoType
{
	unsigned int attr_Id:1;


};

struct CanonicalizationMethodType
{
	struct service_string attr_Algorithm;


};

struct SignatureMethodType
{
	struct service_string attr_Algorithm;


};

struct selection_ReferenceType
{
	unsigned int attr_Id:1;
	unsigned int attr_Type:1;
	unsigned int attr_URI:1;


};

struct DigestMethodType
{
	struct service_string attr_Algorithm;


};

struct arraylen_DigestValueType
{
	size_t data;


};

struct DigestValueType
{
	uint8_t data[128];
	struct arraylen_DigestValueType arraylen;

};

struct ReferenceType
{
	struct service_string attr_Id;
	struct service_string attr_Type;
	struct service_string attr_URI;
	struct DigestMethodType DigestMethod;
	struct DigestValueType DigestValue;
	struct selection_ReferenceType isused;

};

struct arraylen_SignedInfoType
{
	size_t Reference;


};

struct SignedInfoType
{
	struct service_string attr_Id;
	struct CanonicalizationMethodType CanonicalizationMethod;
	struct SignatureMethodType SignatureMethod;
	struct ReferenceType Reference[2];
	struct selection_SignedInfoType isused;	struct arraylen_SignedInfoType arraylen;

};

struct selection_SignatureValueType
{
	unsigned int attr_Id:1;


};

struct arraylen_SignatureValueType
{
	size_t data;


};

struct SignatureValueType
{
	uint8_t data[128];
	struct arraylen_SignatureValueType arraylen;
	struct service_string attr_Id;
	struct selection_SignatureValueType isused;

};

struct SignatureType
{
	struct service_string attr_Id;
	struct SignedInfoType SignedInfo;
	struct SignatureValueType SignatureValue;
	struct selection_SignatureType isused;

};

struct MessageHeaderType
{
	struct sessionIDType SessionID;
	struct NotificationType Notification;
	struct SignatureType* Signature;
	struct selection_MessageHeaderType isused;

};

struct arraylen_evccIDType
{
	size_t data;


};

struct evccIDType
{
	uint8_t data[6];
	struct arraylen_evccIDType arraylen;

};

struct SessionSetupReqType
{
	struct evccIDType EVCCID;


};

struct selection_BodyType
{
	unsigned int SessionSetupReq:1;
	unsigned int SessionSetupRes:1;
	unsigned int ServiceDiscoveryReq:1;
	unsigned int ServiceDiscoveryRes:1;
	unsigned int ServiceDetailReq:1;
	unsigned int ServiceDetailRes:1;
	unsigned int PaymentServiceSelectionReq:1;
	unsigned int PaymentServiceSelectionRes:1;
	unsigned int PaymentDetailsReq:1;
	unsigned int PaymentDetailsRes:1;
	unsigned int AuthorizationReq:1;
	unsigned int AuthorizationRes:1;
	unsigned int ChargeParameterDiscoveryReq:1;
	unsigned int ChargeParameterDiscoveryRes:1;
	unsigned int PowerDeliveryReq:1;
	unsigned int PowerDeliveryRes:1;
	unsigned int MeteringReceiptReq:1;
	unsigned int MeteringReceiptRes:1;
	unsigned int SessionStopReq:1;
	unsigned int SessionStopRes:1;
	unsigned int CertificateUpdateReq:1;
	unsigned int CertificateUpdateRes:1;
	unsigned int CertificateInstallationReq:1;
	unsigned int CertificateInstallationRes:1;
	unsigned int ChargingStatusReq:1;
	unsigned int ChargingStatusRes:1;
	unsigned int CableCheckReq:1;
	unsigned int CableCheckRes:1;
	unsigned int PreChargeReq:1;
	unsigned int PreChargeRes:1;
	unsigned int CurrentDemandReq:1;
	unsigned int CurrentDemandRes:1;
	unsigned int WeldingDetectionReq:1;
	unsigned int WeldingDetectionRes:1;


};

struct arraylen_evseIDType
{
	size_t data;


};

struct evseIDType
{
	uint32_t data[37];
	struct arraylen_evseIDType arraylen;

};

struct selection_SessionSetupResType
{
	unsigned int EVSETimeStamp:1;


};

struct SessionSetupResType
{
	enum responseCodeType ResponseCode;
	struct evseIDType EVSEID;
	int64_t EVSETimeStamp;
	struct selection_SessionSetupResType isused;

};

struct arraylen_serviceScopeType
{
	size_t data;


};

struct serviceScopeType
{
	uint32_t data[64];
	struct arraylen_serviceScopeType arraylen;

};

struct selection_ServiceDiscoveryReqType
{
	unsigned int ServiceScope:1;
	unsigned int ServiceCategory:1;


};

struct ServiceDiscoveryReqType
{
	struct serviceScopeType ServiceScope;
	enum serviceCategoryType ServiceCategory;
	struct selection_ServiceDiscoveryReqType isused;

};

struct arraylen_PaymentOptionListType
{
	size_t PaymentOption;


};

struct PaymentOptionListType
{
	enum paymentOptionType PaymentOption[2];
	struct arraylen_PaymentOptionListType arraylen;

};

struct arraylen_serviceNameType
{
	size_t data;


};

struct serviceNameType
{
	uint32_t data[32];
	struct arraylen_serviceNameType arraylen;

};

struct selection_ChargeServiceType
{
	unsigned int ServiceName:1;
	unsigned int ServiceScope:1;


};

struct arraylen_SupportedEnergyTransferModeType
{
	size_t EnergyTransferMode;


};

struct SupportedEnergyTransferModeType
{
	enum EnergyTransferModeType EnergyTransferMode[6];
	struct arraylen_SupportedEnergyTransferModeType arraylen;

};

struct ChargeServiceType
{
	uint16_t ServiceID;
	struct serviceNameType ServiceName;
	enum serviceCategoryType ServiceCategory;
	struct serviceScopeType ServiceScope;
	int FreeService;
	struct SupportedEnergyTransferModeType SupportedEnergyTransferMode;
	struct selection_ChargeServiceType isused;

};

struct selection_ServiceType
{
	unsigned int ServiceName:1;
	unsigned int ServiceScope:1;


};

struct ServiceType
{
	uint16_t ServiceID;
	struct serviceNameType ServiceName;
	enum serviceCategoryType ServiceCategory;
	struct serviceScopeType ServiceScope;
	int FreeService;
	struct selection_ServiceType isused;

};

struct arraylen_ServiceListType
{
	size_t Service;


};

struct ServiceListType
{
	struct ServiceType Service[8];
	struct arraylen_ServiceListType arraylen;

};

struct selection_ServiceDiscoveryResType
{
	unsigned int ServiceList:1;


};

struct ServiceDiscoveryResType
{
	enum responseCodeType ResponseCode;
	struct PaymentOptionListType PaymentOptionList;
	struct ChargeServiceType ChargeService;
	struct ServiceListType ServiceList;
	struct selection_ServiceDiscoveryResType isused;

};

struct ServiceDetailReqType
{
	uint16_t ServiceID;


};

struct selection_ParameterType
{
	unsigned int boolValue:1;
	unsigned int byteValue:1;
	unsigned int shortValue:1;
	unsigned int intValue:1;
	unsigned int physicalValue:1;
	unsigned int stringValue:1;


};

struct PhysicalValueType
{
	int8_t Multiplier;
	enum unitSymbolType Unit;
	int16_t Value;


};

struct ParameterType
{

	struct service_string attr_Name;

		int boolValue;
		int8_t byteValue;
		int16_t shortValue;
		int32_t intValue;
		struct PhysicalValueType physicalValue;
		struct service_string stringValue;


	struct selection_ParameterType isused;
};

struct arraylen_ParameterSetType
{
	size_t Parameter;


};

struct ParameterSetType
{
	int16_t ParameterSetID;
	struct ParameterType Parameter[3]; /* memory restricted */
	struct arraylen_ParameterSetType arraylen;

};

struct arraylen_ServiceParameterListType
{
	size_t ParameterSet;


};

struct ServiceParameterListType
{
	struct ParameterSetType ParameterSet[8]; /* memory restricted */
	struct arraylen_ServiceParameterListType arraylen;

};

struct selection_ServiceDetailResType
{
	unsigned int ServiceParameterList:1;


};

struct ServiceDetailResType
{
	enum responseCodeType ResponseCode;
	uint16_t ServiceID;
	struct ServiceParameterListType ServiceParameterList;
	struct selection_ServiceDetailResType isused;

};

struct selection_SelectedServiceType
{
	unsigned int ParameterSetID:1;


};

struct SelectedServiceType
{
	uint16_t ServiceID;
	int16_t ParameterSetID;
	struct selection_SelectedServiceType isused;

};

struct arraylen_SelectedServiceListType
{
	size_t SelectedService;


};

struct SelectedServiceListType
{
	struct SelectedServiceType SelectedService[16];
	struct arraylen_SelectedServiceListType arraylen;

};

struct PaymentServiceSelectionReqType
{
	enum paymentOptionType SelectedPaymentOption;
	struct SelectedServiceListType SelectedServiceList;


};

struct PaymentServiceSelectionResType
{
	enum responseCodeType ResponseCode;


};

struct arraylen_eMAIDType
{
	size_t data;


};

struct eMAIDType
{
	uint32_t data[15];
	struct arraylen_eMAIDType arraylen;

};

struct selection_CertificateChainType
{
	unsigned int attr_Id:1;
	unsigned int SubCertificates:1;


};

struct arraylen_certificateType
{
	size_t data;


};

struct certificateType
{
	uint8_t data[800];
	struct arraylen_certificateType arraylen;

};

struct arraylen_SubCertificatesType
{
	size_t Certificate;


};

struct SubCertificatesType
{
	struct certificateType Certificate[4];
	struct arraylen_SubCertificatesType arraylen;

};

struct CertificateChainType
{
	struct service_string attr_Id;
	struct certificateType Certificate;
	struct SubCertificatesType SubCertificates;
	struct selection_CertificateChainType isused;

};

struct PaymentDetailsReqType
{
	struct eMAIDType eMAID;
	struct CertificateChainType ContractSignatureCertChain;


};

struct arraylen_genChallengeType
{
	size_t data;


};

struct genChallengeType
{
	uint8_t data[16];
	struct arraylen_genChallengeType arraylen;

};

struct PaymentDetailsResType
{
	enum responseCodeType ResponseCode;
	struct genChallengeType GenChallenge;
	int64_t EVSETimeStamp;


};

struct selection_AuthorizationReqType
{
	unsigned int attr_Id:1;
	unsigned int GenChallenge:1;


};

struct AuthorizationReqType
{
	struct service_string attr_Id;
	struct genChallengeType GenChallenge;
	struct selection_AuthorizationReqType isused;

};

struct AuthorizationResType
{
	enum responseCodeType ResponseCode;
	enum EVSEProcessingType EVSEProcessing;


};

struct selection_ChargeParameterDiscoveryReqType
{
	unsigned int MaxEntriesSAScheduleTuple:1;
	unsigned int AC_EVChargeParameter:1;
	unsigned int DC_EVChargeParameter:1;


};

struct selection_AC_EVChargeParameterType
{
	unsigned int DepartureTime:1;


};

struct AC_EVChargeParameterType
{
	uint32_t DepartureTime;
	struct PhysicalValueType EAmount;
	struct PhysicalValueType EVMaxVoltage;
	struct PhysicalValueType EVMaxCurrent;
	struct PhysicalValueType EVMinCurrent;
	struct selection_AC_EVChargeParameterType isused;

};

struct selection_DC_EVChargeParameterType
{
	unsigned int DepartureTime:1;
	unsigned int EVMaximumPowerLimit:1;
	unsigned int EVEnergyCapacity:1;
	unsigned int EVEnergyRequest:1;
	unsigned int FullSOC:1;
	unsigned int BulkSOC:1;


};

struct DC_EVStatusType
{
	int EVReady;
	enum DC_EVErrorCodeType EVErrorCode;
	int8_t EVRESSSOC;


};

struct DC_EVChargeParameterType
{
	uint32_t DepartureTime;
	struct DC_EVStatusType DC_EVStatus;
	struct PhysicalValueType EVMaximumCurrentLimit;
	struct PhysicalValueType EVMaximumPowerLimit;
	struct PhysicalValueType EVMaximumVoltageLimit;
	struct PhysicalValueType EVEnergyCapacity;
	struct PhysicalValueType EVEnergyRequest;
	int8_t FullSOC;
	int8_t BulkSOC;
	struct selection_DC_EVChargeParameterType isused;

};

struct ChargeParameterDiscoveryReqType
{
	uint16_t MaxEntriesSAScheduleTuple;
	enum EnergyTransferModeType RequestedEnergyTransferMode;
	struct AC_EVChargeParameterType* AC_EVChargeParameter;
	struct DC_EVChargeParameterType* DC_EVChargeParameter;
	struct selection_ChargeParameterDiscoveryReqType isused;

};

struct selection_RelativeTimeIntervalType
{
	unsigned int duration:1;


};

struct RelativeTimeIntervalType
{
	uint32_t start;
	uint32_t duration;
	struct selection_RelativeTimeIntervalType isused;

};

struct PMaxScheduleEntryType
{
	struct RelativeTimeIntervalType RelativeTimeInterval;
	struct PhysicalValueType PMax;


};

struct arraylen_PMaxScheduleType
{
	size_t PMaxScheduleEntry;


};

struct PMaxScheduleType
{
	struct PMaxScheduleEntryType PMaxScheduleEntry[48]; /* restricted */
	struct arraylen_PMaxScheduleType arraylen;

};

struct selection_SalesTariffType
{
	unsigned int attr_Id:1;
	unsigned int SalesTariffDescription:1;
	unsigned int NumEPriceLevels:1;


};

struct arraylen_tariffDescriptionType
{
	size_t data;


};

struct tariffDescriptionType
{
	uint32_t data[32];
	struct arraylen_tariffDescriptionType arraylen;

};

struct selection_SalesTariffEntryType
{
	unsigned int EPriceLevel:1;
	unsigned int ConsumptionCost:1;


};

struct selection_CostType
{
	unsigned int amountMultiplier:1;


};

struct CostType
{
	enum costKindType costKind;
	uint32_t amount;
	int8_t amountMultiplier;
	struct selection_CostType isused;

};

struct arraylen_ConsumptionCostType
{
	size_t Cost;


};

struct ConsumptionCostType
{
	struct PhysicalValueType startValue;
	struct CostType Cost[3];
	struct arraylen_ConsumptionCostType arraylen;

};

struct arraylen_SalesTariffEntryType
{
	size_t ConsumptionCost;


};

struct SalesTariffEntryType
{
	struct RelativeTimeIntervalType RelativeTimeInterval;
	uint8_t EPriceLevel;
	struct ConsumptionCostType ConsumptionCost[3];
	struct selection_SalesTariffEntryType isused;	struct arraylen_SalesTariffEntryType arraylen;

};

struct arraylen_SalesTariffType
{
	size_t SalesTariffEntry;


};

struct SalesTariffType
{
	struct service_string attr_Id;
	uint8_t SalesTariffID;
	struct tariffDescriptionType SalesTariffDescription;
	uint8_t NumEPriceLevels;
	struct SalesTariffEntryType SalesTariffEntry[24]; /* restricted */
	struct selection_SalesTariffType isused;	struct arraylen_SalesTariffType arraylen;

};

struct selection_SAScheduleTupleType
{
	unsigned int SalesTariff:1;


};

struct SAScheduleTupleType
{
	uint8_t SAScheduleTupleID;
	struct PMaxScheduleType PMaxSchedule;
	struct SalesTariffType* SalesTariff;
	struct selection_SAScheduleTupleType isused;

};

struct arraylen_SAScheduleListType
{
	size_t SAScheduleTuple;


};

struct SAScheduleListType
{
	struct SAScheduleTupleType SAScheduleTuple[3];
	struct arraylen_SAScheduleListType arraylen;

};

struct selection_ChargeParameterDiscoveryResType
{
	unsigned int SAScheduleList:1;
	unsigned int AC_EVSEChargeParameter:1;
	unsigned int DC_EVSEChargeParameter:1;


};

struct AC_EVSEStatusType
{
	uint16_t NotificationMaxDelay;
	enum EVSENotificationType EVSENotification;
	int RCD;


};

struct AC_EVSEChargeParameterType
{
	struct AC_EVSEStatusType AC_EVSEStatus;
	struct PhysicalValueType EVSENominalVoltage;
	struct PhysicalValueType EVSEMaxCurrent;


};

struct selection_DC_EVSEStatusType
{
	unsigned int EVSEIsolationStatus:1;


};

struct DC_EVSEStatusType
{
	uint16_t NotificationMaxDelay;
	enum EVSENotificationType EVSENotification;
	enum isolationLevelType EVSEIsolationStatus;
	enum DC_EVSEStatusCodeType EVSEStatusCode;
	struct selection_DC_EVSEStatusType isused;

};

struct selection_DC_EVSEChargeParameterType
{
	unsigned int EVSECurrentRegulationTolerance:1;
	unsigned int EVSEEnergyToBeDelivered:1;


};

struct DC_EVSEChargeParameterType
{
	struct DC_EVSEStatusType DC_EVSEStatus;
	struct PhysicalValueType EVSEMaximumCurrentLimit;
	struct PhysicalValueType EVSEMaximumPowerLimit;
	struct PhysicalValueType EVSEMaximumVoltageLimit;
	struct PhysicalValueType EVSEMinimumCurrentLimit;
	struct PhysicalValueType EVSEMinimumVoltageLimit;
	struct PhysicalValueType EVSECurrentRegulationTolerance;
	struct PhysicalValueType EVSEPeakCurrentRipple;
	struct PhysicalValueType EVSEEnergyToBeDelivered;
	struct selection_DC_EVSEChargeParameterType isused;

};

struct ChargeParameterDiscoveryResType
{
	enum responseCodeType ResponseCode;
	enum EVSEProcessingType EVSEProcessing;
	struct SAScheduleListType* SAScheduleList;
	struct AC_EVSEChargeParameterType* AC_EVSEChargeParameter;
	struct DC_EVSEChargeParameterType* DC_EVSEChargeParameter;
	struct selection_ChargeParameterDiscoveryResType isused;

};

struct selection_ProfileEntryType
{
	unsigned int ChargingProfileEntryMaxNumberOfPhasesInUse:1;


};

struct ProfileEntryType
{
	uint32_t ChargingProfileEntryStart;
	struct PhysicalValueType ChargingProfileEntryMaxPower;
	int8_t ChargingProfileEntryMaxNumberOfPhasesInUse;
	struct selection_ProfileEntryType isused;

};

struct arraylen_ChargingProfileType
{
	size_t ProfileEntry;


};

struct ChargingProfileType
{
	struct ProfileEntryType ProfileEntry[24];
	struct arraylen_ChargingProfileType arraylen;

};

struct selection_PowerDeliveryReqType
{
	unsigned int ChargingProfile:1;
	unsigned int DC_EVPowerDeliveryParameter:1;


};

struct selection_DC_EVPowerDeliveryParameterType
{
	unsigned int BulkChargingComplete:1;


};

struct DC_EVPowerDeliveryParameterType
{
	struct DC_EVStatusType DC_EVStatus;
	int BulkChargingComplete;
	int ChargingComplete;
	struct selection_DC_EVPowerDeliveryParameterType isused;

};

struct PowerDeliveryReqType
{
	enum chargeProgressType ChargeProgress;
	uint8_t SAScheduleTupleID;
	struct ChargingProfileType ChargingProfile;
	struct DC_EVPowerDeliveryParameterType* DC_EVPowerDeliveryParameter;
	struct selection_PowerDeliveryReqType isused;

};

struct selection_PowerDeliveryResType
{
	unsigned int AC_EVSEStatus:1;
	unsigned int DC_EVSEStatus:1;


};

struct PowerDeliveryResType
{
	enum responseCodeType ResponseCode;
	struct AC_EVSEStatusType* AC_EVSEStatus;
	struct DC_EVSEStatusType* DC_EVSEStatus;
	struct selection_PowerDeliveryResType isused;

};

struct selection_MeteringReceiptReqType
{
	unsigned int attr_Id:1;
	unsigned int SAScheduleTupleID:1;


};

struct arraylen_meterIDType
{
	size_t data;


};

struct meterIDType
{
	uint32_t data[32];
	struct arraylen_meterIDType arraylen;

};

struct selection_MeterInfoType
{
	unsigned int MeterReading:1;
	unsigned int SigMeterReading:1;
	unsigned int MeterStatus:1;
	unsigned int TMeter:1;


};

struct arraylen_sigMeterReadingType
{
	size_t data;


};

struct sigMeterReadingType
{
	uint8_t data[64];
	struct arraylen_sigMeterReadingType arraylen;

};

struct MeterInfoType
{
	struct meterIDType MeterID;
	uint64_t MeterReading;
	struct sigMeterReadingType SigMeterReading;
	int16_t MeterStatus;
	int64_t TMeter;
	struct selection_MeterInfoType isused;

};

struct MeteringReceiptReqType
{
	struct service_string attr_Id;
	struct sessionIDType SessionID;
	uint8_t SAScheduleTupleID;
	struct MeterInfoType MeterInfo;
	struct selection_MeteringReceiptReqType isused;

};

struct selection_MeteringReceiptResType
{
	unsigned int AC_EVSEStatus:1;
	unsigned int DC_EVSEStatus:1;


};

struct MeteringReceiptResType
{
	enum responseCodeType ResponseCode;
	struct AC_EVSEStatusType* AC_EVSEStatus;
	struct DC_EVSEStatusType* DC_EVSEStatus;
	struct selection_MeteringReceiptResType isused;

};

struct SessionStopReqType
{
	enum chargingSessionType ChargingSession;


};

struct SessionStopResType
{
	enum responseCodeType ResponseCode;


};

struct X509IssuerSerialType
{
	struct service_string X509IssuerName;
	int64_t X509SerialNumber;


};

struct arraylen_ListOfRootCertificateIDsType
{
	size_t RootCertificateID;


};

struct ListOfRootCertificateIDsType
{
	struct X509IssuerSerialType RootCertificateID[20];
	struct arraylen_ListOfRootCertificateIDsType arraylen;

};

struct CertificateUpdateReqType
{
	struct service_string attr_Id;
	struct CertificateChainType ContractSignatureCertChain;
	struct eMAIDType eMAID;
	struct ListOfRootCertificateIDsType ListOfRootCertificateIDs;


};

struct arraylen_contractSignatureEncryptedPrivateKeyType
{
	size_t data;
};

struct ContractSignatureEncryptedPrivateKeyType
{
	struct service_string attr_Id;
	uint8_t data[8];
	struct arraylen_contractSignatureEncryptedPrivateKeyType arraylen;


};

struct arraylen_diffieHellmanPublickeyType
{
	size_t data;
};

struct DiffieHellmanPublickeyType
{
	struct service_string attr_Id;
	uint8_t data[8];
	struct arraylen_diffieHellmanPublickeyType arraylen;


};

struct EMAIDType
{
	struct service_string attr_Id;
	uint32_t data[15];
	struct arraylen_eMAIDType arraylen;

};

struct selection_CertificateUpdateResType
{
	unsigned int RetryCounter:1;


};

struct CertificateUpdateResType
{
	enum responseCodeType ResponseCode;
	struct CertificateChainType SAProvisioningCertificateChain;
	struct CertificateChainType ContractSignatureCertChain;
	struct ContractSignatureEncryptedPrivateKeyType ContractSignatureEncryptedPrivateKey;
	struct DiffieHellmanPublickeyType DHpublickey;
	struct EMAIDType eMAID;
	int16_t RetryCounter;
	struct selection_CertificateUpdateResType isused;

};

struct CertificateInstallationReqType
{
	struct service_string attr_Id;
	struct certificateType OEMProvisioningCert;
	struct ListOfRootCertificateIDsType ListOfRootCertificateIDs;


};

struct CertificateInstallationResType
{
	enum responseCodeType ResponseCode;
	struct CertificateChainType SAProvisioningCertificateChain;
	struct CertificateChainType ContractSignatureCertChain;
	struct ContractSignatureEncryptedPrivateKeyType ContractSignatureEncryptedPrivateKey;
	struct DiffieHellmanPublickeyType DHpublickey;
	struct EMAIDType eMAID;


};

struct ChargingStatusReqType
{

 
	int NO_MEMBER:1;
	
};

struct selection_ChargingStatusResType
{
	unsigned int EVSEMaxCurrent:1;
	unsigned int MeterInfo:1;
	unsigned int ReceiptRequired:1;


};

struct ChargingStatusResType
{
	enum responseCodeType ResponseCode;
	struct evseIDType EVSEID;
	uint8_t SAScheduleTupleID;
	struct PhysicalValueType EVSEMaxCurrent;
	struct MeterInfoType MeterInfo;
	int ReceiptRequired;
	struct AC_EVSEStatusType AC_EVSEStatus;
	struct selection_ChargingStatusResType isused;

};

struct CableCheckReqType
{
	struct DC_EVStatusType DC_EVStatus;


};

struct CableCheckResType
{
	enum responseCodeType ResponseCode;
	struct DC_EVSEStatusType DC_EVSEStatus;
	enum EVSEProcessingType EVSEProcessing;


};

struct PreChargeReqType
{
	struct DC_EVStatusType DC_EVStatus;
	struct PhysicalValueType EVTargetVoltage;
	struct PhysicalValueType EVTargetCurrent;


};

struct PreChargeResType
{
	enum responseCodeType ResponseCode;
	struct DC_EVSEStatusType DC_EVSEStatus;
	struct PhysicalValueType EVSEPresentVoltage;


};

struct selection_CurrentDemandReqType
{
	unsigned int EVMaximumVoltageLimit:1;
	unsigned int EVMaximumCurrentLimit:1;
	unsigned int EVMaximumPowerLimit:1;
	unsigned int BulkChargingComplete:1;
	unsigned int RemainingTimeToFullSoC:1;
	unsigned int RemainingTimeToBulkSoC:1;


};

struct CurrentDemandReqType
{
	struct DC_EVStatusType DC_EVStatus;
	struct PhysicalValueType EVTargetCurrent;
	struct PhysicalValueType EVMaximumVoltageLimit;
	struct PhysicalValueType EVMaximumCurrentLimit;
	struct PhysicalValueType EVMaximumPowerLimit;
	int BulkChargingComplete;
	int ChargingComplete;
	struct PhysicalValueType RemainingTimeToFullSoC;
	struct PhysicalValueType RemainingTimeToBulkSoC;
	struct PhysicalValueType EVTargetVoltage;
	struct selection_CurrentDemandReqType isused;

};

struct selection_CurrentDemandResType
{
	unsigned int EVSEMaximumVoltageLimit:1;
	unsigned int EVSEMaximumCurrentLimit:1;
	unsigned int EVSEMaximumPowerLimit:1;
	unsigned int MeterInfo:1;
	unsigned int ReceiptRequired:1;


};

struct CurrentDemandResType
{
	enum responseCodeType ResponseCode;
	struct DC_EVSEStatusType DC_EVSEStatus;
	struct PhysicalValueType EVSEPresentVoltage;
	struct PhysicalValueType EVSEPresentCurrent;
	int EVSECurrentLimitAchieved;
	int EVSEVoltageLimitAchieved;
	int EVSEPowerLimitAchieved;
	struct PhysicalValueType EVSEMaximumVoltageLimit;
	struct PhysicalValueType EVSEMaximumCurrentLimit;
	struct PhysicalValueType EVSEMaximumPowerLimit;
	struct evseIDType EVSEID;
	uint8_t SAScheduleTupleID;
	struct MeterInfoType MeterInfo;
	int ReceiptRequired;
	struct selection_CurrentDemandResType isused;

};

struct WeldingDetectionReqType
{
	struct DC_EVStatusType DC_EVStatus;


};

struct WeldingDetectionResType
{
	enum responseCodeType ResponseCode;
	struct DC_EVSEStatusType DC_EVSEStatus;
	struct PhysicalValueType EVSEPresentVoltage;


};

struct BodyType
{

		struct SessionSetupReqType* SessionSetupReq;
		struct SessionSetupResType* SessionSetupRes;
		struct ServiceDiscoveryReqType* ServiceDiscoveryReq;
		struct ServiceDiscoveryResType* ServiceDiscoveryRes;
		struct ServiceDetailReqType* ServiceDetailReq;
		struct ServiceDetailResType* ServiceDetailRes;
		struct PaymentServiceSelectionReqType* PaymentServiceSelectionReq;
		struct PaymentServiceSelectionResType* PaymentServiceSelectionRes;
		struct PaymentDetailsReqType* PaymentDetailsReq;
		struct PaymentDetailsResType* PaymentDetailsRes;
		struct AuthorizationReqType* AuthorizationReq;
		struct AuthorizationResType* AuthorizationRes;
		struct ChargeParameterDiscoveryReqType* ChargeParameterDiscoveryReq;
		struct ChargeParameterDiscoveryResType* ChargeParameterDiscoveryRes;
		struct PowerDeliveryReqType* PowerDeliveryReq;
		struct PowerDeliveryResType* PowerDeliveryRes;
		struct MeteringReceiptReqType* MeteringReceiptReq;
		struct MeteringReceiptResType* MeteringReceiptRes;
		struct SessionStopReqType* SessionStopReq;
		struct SessionStopResType* SessionStopRes;
		struct CertificateUpdateReqType* CertificateUpdateReq;
		struct CertificateUpdateResType* CertificateUpdateRes;
		struct CertificateInstallationReqType* CertificateInstallationReq;
		struct CertificateInstallationResType* CertificateInstallationRes;
		struct ChargingStatusReqType* ChargingStatusReq;
		struct ChargingStatusResType* ChargingStatusRes;
		struct CableCheckReqType* CableCheckReq;
		struct CableCheckResType* CableCheckRes;
		struct PreChargeReqType* PreChargeReq;
		struct PreChargeResType* PreChargeRes;
		struct CurrentDemandReqType* CurrentDemandReq;
		struct CurrentDemandResType* CurrentDemandRes;
		struct WeldingDetectionReqType* WeldingDetectionReq;
		struct WeldingDetectionResType* WeldingDetectionRes;

	struct selection_BodyType isused;
};

struct AnonType_V2G_Message
{
	struct MessageHeaderType* Header;
	struct BodyType Body;


};

struct EXIDocumentType
{
	struct AnonType_V2G_Message V2G_Message;


};

#endif

#ifdef __cplusplus
}
#endif
