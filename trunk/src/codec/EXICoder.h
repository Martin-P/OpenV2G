/*
 * Copyright (C) 2007-2012 Siemens AG
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*******************************************************************
 *
 * @author Daniel.Peintner.EXT@siemens.com
 * @version 0.7
 * @contact Joerg.Heuer@siemens.com
 *
 * <p>Code generated by EXIdizer.com</p>
 ********************************************************************/



#ifdef __cplusplus
extern "C" {
#endif

#ifndef EXI__CODER_H
#define EXI__CODER_H

#include "EXITypes.h"

#define DOCUMENT 0
#define DOC_CONTENT 126
#define DOC_END 127
#define UR_TYPE_GRAMMAR_0 227
#define UR_TYPE_GRAMMAR_1 228


/* increments global and local string count */
int exi__IncrementStringValueCount(exi_state_t* state, uint16_t qnameID);

int exi__PushStack(exi_state_t* state, int16_t newState, uint16_t qnameID);

int exi__PopStack(exi_state_t* state);

int exi__HandleXsiNilTrue(exi_state_t* state);

int exi__HandleXsiType(exi_state_t* state, exi_eqname_t* xsiType);

int exi__RetrieveAndPushGlobalGrammar(exi_state_t* state, uint16_t qnameID);

int exi__LearnAttribute(exi_state_t* state, uint16_t qnameID, uint16_t uriID, uint16_t localID);

int exi__IsStartContent(int16_t ruleID);

int exi__MoveToElementContentRule(exi_state_t* state);

#endif

#ifdef __cplusplus
}
#endif

